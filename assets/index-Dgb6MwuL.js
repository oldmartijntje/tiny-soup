var L=Object.defineProperty;var w=(r,t,e)=>t in r?L(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var n=(r,t,e)=>w(r,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const h of o.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&i(h)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();class y{constructor(t,e){n(this,"lastFrameTime");n(this,"accumulatedTime");n(this,"timeStep");n(this,"update");n(this,"render");n(this,"isRunning");n(this,"rafId");n(this,"mainLoop",t=>{if(!this.isRunning)return;let e=t-this.lastFrameTime;for(this.lastFrameTime=t,this.accumulatedTime+=e;this.accumulatedTime>=this.timeStep;)this.update(this.timeStep),this.accumulatedTime-=this.timeStep;this.render(),this.rafId=requestAnimationFrame(this.mainLoop)});this.lastFrameTime=0,this.accumulatedTime=0,this.timeStep=1e3/60,this.update=t,this.render=e,this.rafId=null,this.isRunning=!1}start(){this.isRunning||(this.isRunning=!0,this.rafId=requestAnimationFrame(this.mainLoop))}stop(){this.rafId!==null&&(cancelAnimationFrame(this.rafId),this.rafId=null),this.isRunning=!1}}var f=(r=>(r[r.Floor=0]="Floor",r[r.HUD=1]="HUD",r))(f||{}),c=(r=>(r[r.UP=0]="UP",r[r.DOWN=1]="DOWN",r[r.LEFT=2]="LEFT",r[r.RIGHT=3]="RIGHT",r))(c||{});const u={gridSize:32};class d{constructor(t=0,e=0){n(this,"_x");n(this,"_y");this._x=t,this._y=e}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}duplicate(){return new d(this.x,this.y)}matches(t){return this.x===t.x&&this.y===t.y}toString(){return`Vector2(${this.x}, ${this.y})`}toNeighbor(t){let e=this.x,i=this.y;switch(t){case c.UP:i-=u.gridSize;break;case c.DOWN:i+=u.gridSize;break;case c.LEFT:e-=u.gridSize;break;case c.RIGHT:e+=u.gridSize;break}if(e==this.x&&i==this.y)throw new Error("Invalid direction "+t+" for "+this.toString());return new d(e,i)}}class I{constructor(t,e){n(this,"logger");n(this,"stringified");this.logger=t,this.stringified=e}LogError(){return this.logger.LogError(this.stringified),this}LogDebug(){return this.logger.LogDebug(this.stringified),this}LogWarning(){return this.logger.LogWarning(this.stringified),this}LogInfo(){return this.logger.LogInfo(this.stringified),this}Log(){return this.logger.Log(this.stringified),this}PrependText(t){return this.stringified=t+this.stringified,this}AppendText(t){return this.stringified=this.stringified+t,this}}class m{constructor(t){n(this,"context");this.context=t==null?void 0:t.constructor.name}OverrideName(t){return this.context=t.GetName(),this}StringifyObject(t){return new I(this,JSON.stringify(t))}FormatMessage(t){return`[${new Date().toISOString()}] [${this.context}] ${t}`}LogMessage(t,e){const i=this.FormatMessage(t);switch(e){case 0:console.info(`[INFO] ${i}`);break;case 1:console.warn(`[WARNING] ${i}`);break;case 2:console.error(`[ERROR] ${i}`);break;case 3:console.log(`[LOG] ${i}`);break;case 4:console.debug(`[DEBUG] ${i}`);break}}LogInfo(t){this.LogMessage(t,0)}LogDebug(t){this.LogMessage(t,4)}Log(t){this.LogMessage(t,3)}LogWarning(t){this.LogMessage(t,1)}LogError(t){this.LogMessage(t,2)}}class _{constructor(t){n(this,"position");n(this,"children");n(this,"parent");n(this,"hasBeenInitiated");n(this,"drawLayer");n(this,"_logger");this.position=(t==null?void 0:t.position)??new d(0,0),this.children=(t==null?void 0:t.children)??[],this.hasBeenInitiated=!1,this.drawLayer=(t==null?void 0:t.drawLayer)??null,this.parent=(t==null?void 0:t.parent)??null,this._logger=new m(this),queueMicrotask(()=>{this.onInit(),this.hasBeenInitiated=!0})}stepEntry(t,e){this.children.forEach(i=>i.stepEntry(t,e)),this.hasBeenInitiated||(this.hasBeenInitiated=!0,this.onInit()),this.step(t,e)}onInit(){this._logger.LogInfo("Running onInit()")}step(t,e){}draw(t,e,i){const s=e+this.position.x,o=i+this.position.y;this.drawImage(t,s,o),this.getDrawChildrenOrdered().forEach(h=>h.draw(t,s,o))}getDrawChildrenOrdered(){return[...this.children].sort((t,e)=>e.drawLayer===f.Floor||t.position.y>e.position.y?1:-1)}drawImage(t,e,i){}destroy(){this.children.forEach(t=>t.destroy()),this.parent&&this.parent.removeChild(this)}addChild(t){t.parent=this,this.children.push(t)}removeChild(t){this.children=this.children.filter(e=>e!==t)}}class T{constructor(){n(this,"_database",[]);n(this,"_nextId",0);n(this,"_logger");this._logger=new m(this),this._logger.LogInfo("Running constructor()")}subscribe(t,e,i){return this.globalSubscribe(t,e,i,!1)}subscribeOnce(t,e,i){return this.globalSubscribe(t,e,i,!0)}globalSubscribe(t,e,i,s){const o={eventProtocol:t,executeOnce:s,id:this._nextId};return this._logger.StringifyObject(o).PrependText("Subscription Added, receipt: ").Log(),this._database.push({id:this._nextId,protocol:t,caller:e,callback:i,executeOnce:s}),this._nextId++,o}unsubscribe(t){this._logger.Log(`${t.constructor.name} unsubscribed from all events.`),this._database=this._database.filter(e=>e.caller!==t)}cancel(t){this._logger.Log(`Removed subscription with the ID: ${t}`),this._database=this._database.filter(e=>e.id!==t)}emit(t,e=!1,i){this._logger.StringifyObject(i).PrependText(`Emitted event '${t}', error == ${e}, with this data: `).Log(),this._database.forEach(s=>{s.protocol===t&&(s.callback({error:e,data:i}),s.executeOnce&&this.cancel(s.id))})}}const b=new T;var p=(r=>(r[r.TEST=0]="TEST",r))(p||{});class x extends _{constructor(t){super(t),this.position=new d(0,0)}onInit(){b.emit(p.TEST,!1)}drawBackground(t){}drawObjects(t){this.children.forEach(e=>{e.drawLayer!==f.HUD&&e.draw(t,0,0)})}drawForeground(t){this.children.forEach(e=>{e.drawLayer===f.HUD&&e.draw(t,0,0)})}}b.subscribe(p.TEST,[],()=>{console.log("Received test message from event.")});const l=document.querySelector("#game-canvas");if(l==null)throw Error("canvas is null");if(!(l instanceof HTMLCanvasElement))throw Error("canvas is not canvastype");const a=l.getContext("2d");if(a==null)throw Error("ctx is null");console.log("code works!");const g=new x,S=r=>{g.stepEntry(r,g)},O=()=>{a.clearRect(0,0,l.width,l.height),g.drawBackground(a),a.save(),g.drawObjects(a),a.restore(),g.drawForeground(a)},v=new y(S,O);v.start();
